// RUN: %run --split-input-file %s | %filecheck %s

func a() {
}
func b(): i32 {
    return 1;
}
func c(p1: i32) {
}
func d(p1: i32): i32 {
    return 2;
}
func e(p1: i32, p2: i32) {
}
func f(p1: i32, p2: i32): i32 {
    return 3;
}
func main() {
    a();
    // CHECK: 1
    printi(b());
    c(1);
    // CHECK: 2
    printi(d(1));
    e(1, 2);
    // CHECK: 3
    printi(f(1, 2));
}

//---------------------------------------

func myfunc(): i32 {
    return 5;
}
func main() {
    const i: i32 = myfunc();
    // CHECK: 5
    printi(i);
}

//---------------------------------------

struct MyStruct {
    a: i32,
    b: i32,
}

func myfunc(): MyStruct {
    var s: MyStruct;
    s.a = 5;
    s.b = 7;
    return s;
}

func main() {
    const s: MyStruct = myfunc();
    // CHECK: 5
    printi(s.a);
    // CHECK: 7
    printi(s.b);
}

//---------------------------------------

struct MyStruct {
    a: i32,
    b: i32,
}

func myfunc(s: MyStruct) {
    // CHECK: 5
    printi(s.a);
    // CHECK: 7
    printi(s.b);
}

func main() {
    var s: MyStruct;
    s.a = 5;
    s.b = 7;
    myfunc(s);
    // CHECK: 5
    printi(s.a);
    // CHECK: 7
    printi(s.b);
}

//---------------------------------------

struct X {
    a: i32,
}
func_ref(x: *X) {
    x.a = 5;
}
func main() {
    var x: X;
    x.a = 1;
    func_ref(x);
    // CHECK: 5
    printi(x.a);
}

//---------------------------------------

// reference parameters
func test(i: *i32) {
    i = i + 1;
}
func main() {
    var param: i32 = 3;
    test(param);
    // CHECK: 4
    printi(param);
}


//---------------------------------------

// reference parameters
func test(i: *i32) {
    i = i + 1;
}
func main() {
    // CHECK: Only variables allowed for reference parameters
    test(5);
}
