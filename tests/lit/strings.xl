// RUN: %run --split-input-file %s | %filecheck --match-full-lines %s

func main() {
    const s: string = "hello";
    const c: char = s[1];
    // CHECK: e
    print(c);
}

//---------------------------------------

func main() {
    const s: string = "hello";
    const u: string = s.toUpperCase();
    // CHECK: HELLO
    print(u);
}

//---------------------------------------

func main() {
    const s: string = "HELLO";
    const l: string = s.toLowerCase();
    // CHECK: hello
    print(l);
}

//---------------------------------------

func main() {
    const quote_string: string = "Say \"Hello\"";
    // CHECK: Say "Hello"
    print(quote_string);
}

//---------------------------------------

func main() {
    const backslash_string: string = "Path\\to\\file";
    // CHECK: Path\to\file
    print(backslash_string);
}

//---------------------------------------

func main() {
    const tab_string: string = "Hello\tWorld";
    // CHECK: Hello{{\t}}World
    print(tab_string);
}

//---------------------------------------

func main() {
    const newline_string: string = "Hello\nWorld";
    // CHECK: Hello
    // CHECK: World
    print(newline_string);
}

//---------------------------------------

func main() {
    const s: string = "hello";
    // CHECK: 5
    print(s.length());

    const empty: string = "";
    // CHECK: 0
    print(empty.length());

    // Test that length can be stored in a variable
    const len: i32 = s.length();
    // CHECK: 5
    print(len);
}
